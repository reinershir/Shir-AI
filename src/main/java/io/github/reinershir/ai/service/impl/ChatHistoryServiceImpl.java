package io.github.reinershir.ai.service.impl;


import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.unfbx.chatgpt.entity.chat.Message;
import com.unfbx.chatgpt.utils.TikTokensUtil;

import io.github.reinershir.ai.entity.WebRequestMessage;
import io.github.reinershir.ai.mapper.ChatHistoryMapper;
import io.github.reinershir.ai.model.ChatHistory;
import io.github.reinershir.ai.service.ChatHistoryService;

/**
 * ChatHistory Service, generated by Shir Boot
 * @author Shir-Boot
 * @Date 2024年4月17日 上午10:07:25
 * @version 1.0		
 * 
 */
@Service("chatHistoryService")
public class ChatHistoryServiceImpl extends ServiceImpl<ChatHistoryMapper,ChatHistory> implements ChatHistoryService{
	private String model = "gpt-3.5-turbo-0613";

	@Override
	public boolean saveChatHistory(WebRequestMessage request, StringBuffer message, Long userId,
			List<Message> allMessage) {
		if(!StringUtils.hasText(request.getModel())) {
    		request.setModel(model);
    	}
		allMessage.add(Message.builder().role(Message.Role.SYSTEM).content(message.toString()).build());
		//TODO 尚不支持gpt-4o计算方式
		int tokenCount = TikTokensUtil.tokens(request.getModel().toLowerCase().startsWith("gpt-4o")?"gpt-4":request.getModel(),allMessage);
		ChatHistory history = new ChatHistory(request.getPrompt(), message.toString(), request.getMask(), userId,Float.valueOf(tokenCount),request.getSessionId(), new Date());
		if(StringUtils.hasText(request.getImageUrl())) {
			history.setAttach("image://"+request.getImageUrl());
		}
		return super.save(history);
	}

	@Override
	public boolean saveChatHistory(String sessionId,String model, String promot, String mask, StringBuffer message, Long userId,
			List<Message> allMessage) {
		WebRequestMessage req = new WebRequestMessage();
		req.setModel(model);
		req.setPrompt(promot);
		req.setSessionId(sessionId);
		return saveChatHistory(req, message, userId, allMessage);
	}
}
